version: "3.8"

networks:
  kafka-network:
    name: kafka_benchmarks
    external: true
    driver: overlay

services:
  zookeeper-1-1:
    image: "bitnami/zookeeper:latest"
    networks:
      - kafka-network
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888,zookeeper-1-2:2888:3888,zookeeper-1-3:2888:3888,zookeeper-1-4:2888:3888
  zookeeper-1-2:
    image: "bitnami/zookeeper:latest"
    networks:
      - kafka-network
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zookeeper-1-1:2888:3888,0.0.0.0:2888:3888,zookeeper-1-3:2888:3888,zookeeper-1-4:2888:3888

  kafka_1_1:
    image: "bitnami/kafka:latest"
    networks:
      - kafka-network
    depends_on:
      - "zookeeper-1-1"
      - "zookeeper-1-2"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-1-1:2181,zookeeper-1-2:2181,zookeeper-1-3:2181,zookeeper-1-4:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_1_1:9092
  kafka_1_2:
    image: "bitnami/kafka:latest"
    networks:
      - kafka-network
    depends_on:
      - "zookeeper-1-1"
      - "zookeeper-1-2"
    environment:
      - KAFKA_ENABLE_KRAFT=no
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-1-1:2181,zookeeper-1-2:2181,zookeeper-1-3:2181,zookeeper-1-4:2181
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka_1_2:9092

  #Kafka setup
  init-kafka:
    image: "confluentinc/cp-kafka:6.1.1"
    networks:
      - kafka-network
    depends_on:
      - "kafka_1_1"
      - "kafka_1_2"
      - "kafka_2_1"
      - "kafka_2_2"
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "# blocks until kafka is reachable
      echo -e 'INIT first kafka replica with $NUM_EXHIBITIONS partitions'
      kafka-topics --bootstrap-server kafka_1_1:9092 --list
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka_1_1:9092 --create --if-not-exists --topic ART-EXHIBITION --replication-factor 1 --partitions $NUM_EXHIBITIONS
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka_1_1:9092 --list

  #Clients
  safe-sense:
    image: "${DOCKERHUB_USERNAME}/safe-sense:latest"
    networks:
      - kafka-network
    depends_on:
      - "init-kafka"
    environment:
      - CLIENT_ID=0
      - NUM_EXHIBITIONS=$NUM_EXHIBITIONS
      - NUM_TRUE_ALARMS=$NUM_TRUE_ALARMS
      - NUM_FALSE_ALARMS=$NUM_FALSE_ALARMS
    volumes:
      - ./results/safe-sense:/usr/kabis/result
  safe-corp:
    image: "${DOCKERHUB_USERNAME}/safe-corp:latest"
    networks:
      - kafka-network
    depends_on:
      - "init-kafka"
    environment:
      - CLIENT_ID=1
      - NUM_EXHIBITIONS=$NUM_EXHIBITIONS
      - NUM_TRUE_ALARMS=$NUM_TRUE_ALARMS
      - NUM_FALSE_ALARMS=$NUM_FALSE_ALARMS
      - NUM_UNCAUGHT_BREACHES=$NUM_UNCAUGHT_BREACHES
    volumes:
      - ./results/safe-corp:/usr/kabis/result
